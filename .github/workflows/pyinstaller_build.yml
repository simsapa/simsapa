name: PyInstaller Build

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v[0-9].*'

jobs:
  briefcase:
    name: Bundle on ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, windows-2022]
        python-version: ["3.11"]
        arch: ["x86_64"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Node
        uses: actions/setup-node@v4
        if: runner.os == 'MacOS'
        with:
          node-version: 20

      - name: Install Node libs
        if: runner.os == 'MacOS'
        run: npm install --global create-dmg

      - name: Install Python pip
        run: python -m pip install --upgrade pip

      - name: Install Python libs
        run: |
          python -m pip install poetry
          python -m poetry install

      - name: Build binary executable (.app or .exe)
        run: python -m poetry run doit build

      - name: Mac Build .dmg
        if: runner.os == 'MacOS'
        run: ./scripts/build_dmg.sh

      - name: Upload Artifact for MacOS
        uses: actions/upload-artifact@v3
        if: runner.os == 'MacOS'
        with:
          name: simsapa-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.dmg
          path: 'dist/*.dmg'

      - name: Upload Artifact for Windows
        uses: actions/upload-artifact@v3
        if: runner.os == 'Windows'
        with:
          name: simsapa-${{ github.ref_name }}-${{ matrix.os }}
          path: 'dist/Simsapa Dhamma Reader/'
